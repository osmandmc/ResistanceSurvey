// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RS.EF;

#nullable disable

namespace RS.EF.Migrations
{
    [DbContext(typeof(RSDBContext))]
    [Migration("20221116210817_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RS.COMMON.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyScaleId")
                        .HasColumnType("integer");

                    b.Property<int?>("CompanyTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("CompanyWorkLineId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyScaleId");

                    b.HasIndex("CompanyTypeId");

                    b.HasIndex("CompanyWorkLineId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("RS.COMMON.Entities.CompanyOutsourceCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<int>("OutsourceCompanyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OutsourceCompanyId");

                    b.ToTable("CompanyOutsourceCompany");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.CompanyScale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CompanyScale");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CompanyType");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.CompanyWorkLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CompanyWorkLine");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.Corporation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<int?>("CorporationTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CorporationTypeId");

                    b.ToTable("Corporation");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.CorporationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CorporationType");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("District");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.EmployeeCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmployeeCount");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.EmploymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmploymentType");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.InterventionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InterventionType");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.ProtestoEmployeeCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProtestoEmployeeCount");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.ProtestoPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProtestoPlace");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.ProtestoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AgainstProduction")
                        .HasColumnType("boolean");

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("Simple")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("ProtestoType");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.ResistanceReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ResistanceReason");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.TradeUnion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("TradeUnionConfederationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TradeUnionConfederationId");

                    b.ToTable("TradeUnion");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.TradeUnionAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TradeUnionAuthority");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.TradeUnionConfederation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TradeUnionConfederation");
                });

            modelBuilder.Entity("RS.COMMON.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Header")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<int>("Source")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("RS.COMMON.Entities.Protesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<int?>("CustodyCount")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("EmployeeCountNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GenderId")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("ProtestoEmployeeCountId")
                        .HasColumnType("integer");

                    b.Property<int>("ResistanceId")
                        .HasColumnType("integer");

                    b.Property<string>("SimpleProtestoDescription")
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StrikeDuration")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Updater")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("ProtestoEmployeeCountId");

                    b.HasIndex("ResistanceId");

                    b.ToTable("Protesto");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ProtestoCity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<int>("ProtestoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("ProtestoId");

                    b.ToTable("ProtestoCity");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ProtestoDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DistrictId")
                        .HasColumnType("integer");

                    b.Property<int>("ProtestoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProtestoId");

                    b.ToTable("ProtestoDistrict");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ProtestoInterventionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InterventionTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("ProtestoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InterventionTypeId");

                    b.HasIndex("ProtestoId");

                    b.ToTable("ProtestoInterventionType");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ProtestoLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .HasColumnType("text");

                    b.Property<int>("ProtestoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProtestoId");

                    b.ToTable("ProtestoLocation");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ProtestoProtestoPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProtestoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProtestoPlaceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProtestoId");

                    b.HasIndex("ProtestoPlaceId");

                    b.ToTable("ProtestoProtestoPlace");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ProtestoProtestoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProtestoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProtestoTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProtestoId");

                    b.HasIndex("ProtestoTypeId");

                    b.ToTable("ProtestoProtestoType");
                });

            modelBuilder.Entity("RS.COMMON.Entities.Resistance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AnyLegalIntervention")
                        .HasColumnType("boolean");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("DevelopRight")
                        .HasColumnType("boolean");

                    b.Property<int?>("EmployeeCountId")
                        .HasColumnType("integer");

                    b.Property<int?>("EmployeeCountNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("FiredEmployeeCountByProtesto")
                        .HasColumnType("integer");

                    b.Property<bool>("HasTradeUnion")
                        .HasColumnType("boolean");

                    b.Property<string>("LegalInterventionDesc")
                        .HasColumnType("text");

                    b.Property<int?>("MainCompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("ResistanceResult")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("TradeUnionAuthorityId")
                        .HasColumnType("integer");

                    b.Property<int?>("TradeUnionId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Updater")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeCountId");

                    b.HasIndex("MainCompanyId");

                    b.HasIndex("TradeUnionAuthorityId");

                    b.HasIndex("TradeUnionId");

                    b.ToTable("Resistance");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ResistanceCorporation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CorporationId")
                        .HasColumnType("integer");

                    b.Property<int>("ResistanceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CorporationId");

                    b.HasIndex("ResistanceId");

                    b.ToTable("ResistanceCorporation");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ResistanceEmploymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmploymentTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("ResistanceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentTypeId");

                    b.HasIndex("ResistanceId");

                    b.ToTable("ResistanceEmploymentType");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ResistanceNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NewsId")
                        .HasColumnType("integer");

                    b.Property<int>("ResistanceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex("ResistanceId");

                    b.ToTable("ResistanceNews");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ResistanceResistanceReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ResistanceId")
                        .HasColumnType("integer");

                    b.Property<int>("ResistanceReasonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ResistanceId");

                    b.HasIndex("ResistanceReasonId");

                    b.ToTable("ResistanceResistanceReason");
                });

            modelBuilder.Entity("RS.COMMON.Entities.Company", b =>
                {
                    b.HasOne("RS.COMMON.Entities.LookupEntity.CompanyScale", "CompanyScale")
                        .WithMany()
                        .HasForeignKey("CompanyScaleId");

                    b.HasOne("RS.COMMON.Entities.LookupEntity.CompanyType", "CompanyType")
                        .WithMany()
                        .HasForeignKey("CompanyTypeId");

                    b.HasOne("RS.COMMON.Entities.LookupEntity.CompanyWorkLine", "CompanyWorkLine")
                        .WithMany()
                        .HasForeignKey("CompanyWorkLineId");

                    b.Navigation("CompanyScale");

                    b.Navigation("CompanyType");

                    b.Navigation("CompanyWorkLine");
                });

            modelBuilder.Entity("RS.COMMON.Entities.CompanyOutsourceCompany", b =>
                {
                    b.HasOne("RS.COMMON.Entities.Company", "Company")
                        .WithMany("OutsourceCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.Company", "OutsourceCompany")
                        .WithMany()
                        .HasForeignKey("OutsourceCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("OutsourceCompany");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.Corporation", b =>
                {
                    b.HasOne("RS.COMMON.Entities.LookupEntity.CorporationType", "CorporationType")
                        .WithMany()
                        .HasForeignKey("CorporationTypeId");

                    b.Navigation("CorporationType");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.District", b =>
                {
                    b.HasOne("RS.COMMON.Entities.LookupEntity.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("RS.COMMON.Entities.LookupEntity.TradeUnion", b =>
                {
                    b.HasOne("RS.COMMON.Entities.LookupEntity.TradeUnionConfederation", "TradeUnionConfederation")
                        .WithMany()
                        .HasForeignKey("TradeUnionConfederationId");

                    b.Navigation("TradeUnionConfederation");
                });

            modelBuilder.Entity("RS.COMMON.Entities.Protesto", b =>
                {
                    b.HasOne("RS.COMMON.Entities.LookupEntity.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.LookupEntity.ProtestoEmployeeCount", "ProtestoEmployeeCount")
                        .WithMany()
                        .HasForeignKey("ProtestoEmployeeCountId");

                    b.HasOne("RS.COMMON.Entities.Resistance", "Resistance")
                        .WithMany("Protestos")
                        .HasForeignKey("ResistanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("ProtestoEmployeeCount");

                    b.Navigation("Resistance");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ProtestoCity", b =>
                {
                    b.HasOne("RS.COMMON.Entities.LookupEntity.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.Protesto", "Protesto")
                        .WithMany("Cities")
                        .HasForeignKey("ProtestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Protesto");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ProtestoDistrict", b =>
                {
                    b.HasOne("RS.COMMON.Entities.LookupEntity.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.Protesto", "Protesto")
                        .WithMany("Districts")
                        .HasForeignKey("ProtestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Protesto");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ProtestoInterventionType", b =>
                {
                    b.HasOne("RS.COMMON.Entities.LookupEntity.InterventionType", "InterventionType")
                        .WithMany()
                        .HasForeignKey("InterventionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.Protesto", "Protesto")
                        .WithMany("ProtestoInterventionTypes")
                        .HasForeignKey("ProtestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InterventionType");

                    b.Navigation("Protesto");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ProtestoLocation", b =>
                {
                    b.HasOne("RS.COMMON.Entities.LookupEntity.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.LookupEntity.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("RS.COMMON.Entities.Protesto", "Protesto")
                        .WithMany("Locations")
                        .HasForeignKey("ProtestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("District");

                    b.Navigation("Protesto");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ProtestoProtestoPlace", b =>
                {
                    b.HasOne("RS.COMMON.Entities.Protesto", "Protesto")
                        .WithMany("ProtestoProtestoPlaces")
                        .HasForeignKey("ProtestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.LookupEntity.ProtestoPlace", "ProtestoPlace")
                        .WithMany()
                        .HasForeignKey("ProtestoPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Protesto");

                    b.Navigation("ProtestoPlace");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ProtestoProtestoType", b =>
                {
                    b.HasOne("RS.COMMON.Entities.Protesto", "Protesto")
                        .WithMany("ProtestoProtestoTypes")
                        .HasForeignKey("ProtestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.LookupEntity.ProtestoType", "ProtestoType")
                        .WithMany()
                        .HasForeignKey("ProtestoTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Protesto");

                    b.Navigation("ProtestoType");
                });

            modelBuilder.Entity("RS.COMMON.Entities.Resistance", b =>
                {
                    b.HasOne("RS.COMMON.Entities.LookupEntity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.LookupEntity.EmployeeCount", "EmployeeCount")
                        .WithMany()
                        .HasForeignKey("EmployeeCountId");

                    b.HasOne("RS.COMMON.Entities.Company", "MainCompany")
                        .WithMany()
                        .HasForeignKey("MainCompanyId");

                    b.HasOne("RS.COMMON.Entities.LookupEntity.TradeUnionAuthority", "TradeUnionAuthority")
                        .WithMany()
                        .HasForeignKey("TradeUnionAuthorityId");

                    b.HasOne("RS.COMMON.Entities.LookupEntity.Corporation", "TradeUnion")
                        .WithMany()
                        .HasForeignKey("TradeUnionId");

                    b.Navigation("Category");

                    b.Navigation("Company");

                    b.Navigation("EmployeeCount");

                    b.Navigation("MainCompany");

                    b.Navigation("TradeUnion");

                    b.Navigation("TradeUnionAuthority");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ResistanceCorporation", b =>
                {
                    b.HasOne("RS.COMMON.Entities.LookupEntity.Corporation", "Corporation")
                        .WithMany()
                        .HasForeignKey("CorporationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.Resistance", "Resistance")
                        .WithMany("ResistanceCorporations")
                        .HasForeignKey("ResistanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corporation");

                    b.Navigation("Resistance");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ResistanceEmploymentType", b =>
                {
                    b.HasOne("RS.COMMON.Entities.LookupEntity.EmploymentType", "EmploymentType")
                        .WithMany()
                        .HasForeignKey("EmploymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.Resistance", "Resistance")
                        .WithMany("ResistanceEmploymentTypes")
                        .HasForeignKey("ResistanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmploymentType");

                    b.Navigation("Resistance");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ResistanceNews", b =>
                {
                    b.HasOne("RS.COMMON.Entities.News", "News")
                        .WithMany()
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.Resistance", "Resistance")
                        .WithMany("ResistanceNews")
                        .HasForeignKey("ResistanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("Resistance");
                });

            modelBuilder.Entity("RS.COMMON.Entities.ResistanceResistanceReason", b =>
                {
                    b.HasOne("RS.COMMON.Entities.Resistance", "Resistance")
                        .WithMany("ResistanceResistanceReasons")
                        .HasForeignKey("ResistanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.COMMON.Entities.LookupEntity.ResistanceReason", "ResistanceReason")
                        .WithMany()
                        .HasForeignKey("ResistanceReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resistance");

                    b.Navigation("ResistanceReason");
                });

            modelBuilder.Entity("RS.COMMON.Entities.Company", b =>
                {
                    b.Navigation("OutsourceCompanies");
                });

            modelBuilder.Entity("RS.COMMON.Entities.Protesto", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Districts");

                    b.Navigation("Locations");

                    b.Navigation("ProtestoInterventionTypes");

                    b.Navigation("ProtestoProtestoPlaces");

                    b.Navigation("ProtestoProtestoTypes");
                });

            modelBuilder.Entity("RS.COMMON.Entities.Resistance", b =>
                {
                    b.Navigation("Protestos");

                    b.Navigation("ResistanceCorporations");

                    b.Navigation("ResistanceEmploymentTypes");

                    b.Navigation("ResistanceNews");

                    b.Navigation("ResistanceResistanceReasons");
                });
#pragma warning restore 612, 618
        }
    }
}
